{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Container/Container.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","this","type","onChange","pattern","title","required","Component","Filter","protoTypes","PropTypes","string","isRequired","func","ContactListItem","onDeleteContact","onClick","ContactList","contacts","map","id","Container","children","App","filter","addContact","contact","uuidv4","newContact","toLowerCase","includes","alert","deleteContact","contactId","prevState","changeFilter","getFilteredContacts","normalizedFilter","localStorage","getItem","parsedContacts","JSON","parse","prevProps","nextContacts","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4319430f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './ContactForm.scss';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: ''\n  };\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n  \n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n  \n  render() {\n    return (\n      <form className=\"contact-form\" onSubmit={this.handleSubmit}>\n      <label className=\"contact-form__label\">\n        Name\n        <input\n          type=\"text\"\n          className=\"contact-form__input\"\n          name=\"name\"\n          value={this.state.name}\n          onChange={this.handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className=\"contact-form__label\">\n        Number\n        <input\n          type=\"tel\"\n          className=\"contact-form__input\"  \n          name=\"number\"\n          value={this.state.number}\n          onChange={this.handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n        <button\n          type=\"submit\"\n          className=\"contact-form__btn\"\n        >\n        Add contact\n      </button> \n    </form>\n    )\n  }\n}\n\nexport default ContactForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Filter.scss';\n\nconst Filter = ({ value, onChange }) => (\n  <label className=\"contact-filter\">\n    Find contacts by name\n    <input\n      type=\"text\"\n      className=\"contact-filter__input\"\n      value={value}\n      onChange={onChange} />\n  </label>\n);\n\nFilter.protoTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ContactListItem.scss';\n\nconst ContactListItem = ({ name, number, onDeleteContact }) => (\n  <>\n    <span>{name}: {number}</span>\n    <button type=\"button\" className=\"contact-list__delete-btn\" onClick={onDeleteContact}>Delete</button>\n  </>\n);\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;","import React from 'react';\nimport ContactListItem from '../ContactListItem';\nimport PropTypes from 'prop-types';\nimport './ContactList.scss';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul>\n    {contacts.map(({ id, name, number}) => (\n      <li key={id} className=\"contact-list__item\">\n        <ContactListItem\n          name={name}\n          number={number}\n          onDeleteContact={() => onDeleteContact(id)}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default ContactList;","import React from 'react';\nimport './Container.scss';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList'\nimport Container from './components/Container';\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n  contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n  ],\n  filter: ''\n  }\n  \n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    \n    const newContact = contact.name.toLowerCase();\n    const existingContactsNames = this.state.contacts.map(contact => contact.name.toLowerCase());\n\n    if (existingContactsNames.includes(newContact)) {\n      alert(`${contact.name} is already in contacts.`);\n      return;\n    }\n\n    this.setState(({contacts}) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  }\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        \n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Container>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}